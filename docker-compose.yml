

services:
  redis:
    image: redis:6
    networks:
      - vunderkids_net

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vunderkids_net
    ports:
      - "${DATABASE_PORT}:5432"

  web:
    build: .
    command:
      [
        "uvicorn",
        "vunderkids.asgi:application",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
        "--workers",
        "4"
      ]
    volumes:
      - .:/django
    ports:
      - "9000:8000"
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      DATABASE_URL: postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
    depends_on:
      - redis
      - db
    networks:
      - vunderkids_net

  celery_worker:
    build: .
    command: celery -A vunderkids worker --loglevel=info -c 4
    volumes:
      - .:/django
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      DATABASE_URL: postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
    depends_on:
      - web
      - redis
      - db
    networks:
      - vunderkids_net

  celery_beat:
    build: .
    command: celery -A vunderkids beat --loglevel=info
    volumes:
      - .:/django
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      DATABASE_URL: postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
    depends_on:
      - web
      - redis
      - db
    networks:
      - vunderkids_net

volumes:
  postgres_data:

networks:
  vunderkids_net:
